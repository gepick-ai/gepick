import {
  ApiDocsOptions,
  DEFAULT_APIDOCS_EXTRACTION_PATH,
  DEFAULT_APIDOCS_GENERATION_PATH,
  LernaPackage,
  getPackagesWithTsDocs,
  getUnscopedPackageName,
} from './helper';

/**
 * Update markdown files generated by api-documenter to prepend Jekyll metadata
 * and generate `apidocs/index.md`.
 *
 * @param options - Options for api docs
 */
export async function updateApiDocs(options: ApiDocsOptions = {}) {
  options = Object.assign(
    {
      rootDir: process.cwd(),
      apiDocsGenerationPath: DEFAULT_APIDOCS_GENERATION_PATH,
      apiDocsExtractionPath: DEFAULT_APIDOCS_EXTRACTION_PATH,
      generateDefaultPackageDoc: true,
    },
    options,
  );
  const packages = await getPackagesWithTsDocs(options.rootDir);

  /* istanbul ignore if  */
  if (!packages.length)
    return;

  const packagesByName: Record<string, LernaPackage> = {};

  for (const pkg of packages) {
    packagesByName[getUnscopedPackageName(pkg.name)] = pkg;
  }

  options.lernaPackages = packagesByName;
}
